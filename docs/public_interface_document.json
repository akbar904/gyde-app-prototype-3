{
  "package_name": "com.com.walturn.gyde_app",
  "project_description": "A Flutter project using the Stacked architecture, featuring an onboarding, profile setup, and personalized user experience flow for a luxury chauffeur service app called Gyde, with routing, dependency injection, and dialog/bottom sheet management.",
  "architecture_overview": "The application follows the Stacked architecture with separate folders for app setup, features, UI components, and utilities. It uses Stacked for state management, routing, and dependency injection. The architecture has been expanded to include new routes and views for the onboarding, profile setup, and personalized user experience flows.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "onboarding": {
          "welcome_view.dart": {},
          "auth_options_view.dart": {},
          "phone_input_view.dart": {},
          "verification_code_view.dart": {},
          "email_collection_view.dart": {},
          "welcome_confirmation_view.dart": {},
          "terms_conditions_view.dart": {}
        },
        "profile_setup": {
          "mode_selection_view.dart": {},
          "personal_information_view.dart": {},
          "company_information_view.dart": {},
          "package_selection_view.dart": {},
          "payment_method_view.dart": {},
          "card_details_view.dart": {},
          "notification_permission_view.dart": {},
          "profile_completion_view.dart": {}
        },
        "personalized_experience": {
          "amenities_selection_view.dart": {},
          "frequently_visited_places_view.dart": {},
          "save_place_view.dart": {},
          "vehicle_selection_view.dart": {},
          "chauffeur_selection_view.dart": {},
          "booking_confirmation_view.dart": {}
        }
      },
      "ui": {
        "bottom_sheets": {
          "notice": {
            "notice_sheet.dart": {},
            "notice_sheet_model.dart": {}
          }
        },
        "common": {
          "app_colors.dart": {},
          "ui_helpers.dart": {}
        },
        "dialogs": {
          "info_alert": {
            "info_alert_dialog.dart": {},
            "info_alert_dialog_model.dart": {}
          }
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for the onboarding, profile setup, and personalized user experience flows, services (BottomSheetService, DialogService, NavigationService), bottom sheets (NoticeSheet), and dialogs (InfoAlertDialog). The file structure allows for easy addition of new services, routes, bottom sheets, and dialogs using the @stacked-import, @stacked-route, @stacked-service, @stacked-bottom-sheet, and @stacked-dialog annotations.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/ui/bottom_sheets/notice/notice_sheet.dart",
        "package:my_app/ui/dialogs/info_alert/info_alert_dialog.dart",
        "package:my_app/features/onboarding/welcome_view.dart",
        "package:my_app/features/onboarding/auth_options_view.dart",
        "package:my_app/features/onboarding/phone_input_view.dart",
        "package:my_app/features/onboarding/verification_code_view.dart",
        "package:my_app/features/onboarding/email_collection_view.dart",
        "package:my_app/features/onboarding/welcome_confirmation_view.dart",
        "package:my_app/features/onboarding/terms_conditions_view.dart",
        "package:my_app/features/profile_setup/mode_selection_view.dart",
        "package:my_app/features/profile_setup/personal_information_view.dart",
        "package:my_app/features/profile_setup/company_information_view.dart",
        "package:my_app/features/profile_setup/package_selection_view.dart",
        "package:my_app/features/profile_setup/payment_method_view.dart",
        "package:my_app/features/profile_setup/card_details_view.dart",
        "package:my_app/features/profile_setup/notification_permission_view.dart",
        "package:my_app/features/profile_setup/profile_completion_view.dart",
        "package:my_app/features/personalized_experience/amenities_selection_view.dart",
        "package:my_app/features/personalized_experience/frequently_visited_places_view.dart",
        "package:my_app/features/personalized_experience/save_place_view.dart",
        "package:my_app/features/personalized_experience/vehicle_selection_view.dart",
        "package:my_app/features/personalized_experience/chauffeur_selection_view.dart",
        "package:my_app/features/personalized_experience/booking_confirmation_view.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_view.dart",
      "description": "The welcome page of the onboarding flow, introducing users to Gyde.",
      "class_diagram": "@startuml\nclass WelcomeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/auth_options_view.dart",
      "description": "The authentication options page, allowing users to continue with phone or email.",
      "class_diagram": "@startuml\nclass AuthOptionsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/phone_input_view.dart",
      "description": "The phone number input page for user verification.",
      "class_diagram": "@startuml\nclass PhoneInputView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/verification_code_view.dart",
      "description": "The verification code page for entering the code sent to the user's phone.",
      "class_diagram": "@startuml\nclass VerificationCodeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/email_collection_view.dart",
      "description": "The email collection page for gathering user email addresses.",
      "class_diagram": "@startuml\nclass EmailCollectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_confirmation_view.dart",
      "description": "The welcome confirmation page, confirming access to Gyde's services.",
      "class_diagram": "@startuml\nclass WelcomeConfirmationView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/terms_conditions_view.dart",
      "description": "The terms and conditions page, outlining the terms of use for Gyde.",
      "class_diagram": "@startuml\nclass TermsConditionsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/mode_selection_view.dart",
      "description": "The mode selection page for choosing between Business and Personal modes.",
      "class_diagram": "@startuml\nclass ModeSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/personal_information_view.dart",
      "description": "The personal information page for collecting user's basic details.",
      "class_diagram": "@startuml\nclass PersonalInformationView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/company_information_view.dart",
      "description": "The company information page for Business Mode, collecting company details.",
      "class_diagram": "@startuml\nclass CompanyInformationView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/package_selection_view.dart",
      "description": "The package selection page for choosing a service package.",
      "class_diagram": "@startuml\nclass PackageSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/payment_method_view.dart",
      "description": "The payment method page for adding a preferred payment method.",
      "class_diagram": "@startuml\nclass PaymentMethodView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/card_details_view.dart",
      "description": "The card details page for entering credit/debit card information.",
      "class_diagram": "@startuml\nclass CardDetailsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/notification_permission_view.dart",
      "description": "The notification permission page for enabling notifications.",
      "class_diagram": "@startuml\nclass NotificationPermissionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/profile_setup/profile_completion_view.dart",
      "description": "The profile completion page with a personalized greeting.",
      "class_diagram": "@startuml\nclass ProfileCompletionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/personalized_experience/amenities_selection_view.dart",
      "description": "The amenities selection page for choosing luxury add-ons like beverages, snacks, music preferences, reading material, and interior features.",
      "class_diagram": "@startuml\nclass AmenitiesSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/personalized_experience/frequently_visited_places_view.dart",
      "description": "The frequently visited places page with a map view and the ability to add and save favorite destinations.",
      "class_diagram": "@startuml\nclass FrequentlyVisitedPlacesView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/personalized_experience/save_place_view.dart",
      "description": "The save place page for naming and saving the current location.",
      "class_diagram": "@startuml\nclass SavePlaceView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/personalized_experience/vehicle_selection_view.dart",
      "description": "The vehicle selection page for choosing a vehicle class with details like number of seats and bags.",
      "class_diagram": "@startuml\nclass VehicleSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/personalized_experience/chauffeur_selection_view.dart",
      "description": "The chauffeur selection page for choosing a personal chauffeur with ratings, hourly rates, and availability calendar.",
      "class_diagram": "@startuml\nclass ChauffeurSelectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/personalized_experience/booking_confirmation_view.dart",
      "description": "The booking confirmation page with a summary of selected preferences and booking options.",
      "class_diagram": "@startuml\nclass BookingConfirmationView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/onboarding/welcome_view.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant WelcomeView\nparticipant AuthOptionsView\nparticipant PhoneInputView\nparticipant VerificationCodeView\nparticipant EmailCollectionView\nparticipant WelcomeConfirmationView\nparticipant TermsConditionsView\nparticipant ModeSelectionView\nparticipant PersonalInformationView\nparticipant CompanyInformationView\nparticipant PackageSelectionView\nparticipant PaymentMethodView\nparticipant CardDetailsView\nparticipant NotificationPermissionView\nparticipant ProfileCompletionView\nparticipant AmenitiesSelectionView\nparticipant FrequentlyVisitedPlacesView\nparticipant SavePlaceView\nparticipant VehicleSelectionView\nparticipant ChauffeurSelectionView\nparticipant BookingConfirmationView\n\nUser -> main: Launch app\nmain -> WelcomeView: Show welcome page\nUser -> WelcomeView: Click 'Get Started'\nWelcomeView -> AuthOptionsView: Navigate to auth options\nUser -> AuthOptionsView: Choose auth method\nAuthOptionsView -> PhoneInputView: Navigate to phone input\nUser -> PhoneInputView: Enter phone number\nPhoneInputView -> VerificationCodeView: Navigate to verification code\nUser -> VerificationCodeView: Enter code\nVerificationCodeView -> EmailCollectionView: Navigate to email collection\nUser -> EmailCollectionView: Enter email\nEmailCollectionView -> WelcomeConfirmationView: Navigate to welcome confirmation\nUser -> WelcomeConfirmationView: View confirmation\nWelcomeConfirmationView -> TermsConditionsView: Navigate to terms and conditions\nUser -> TermsConditionsView: Read terms\nTermsConditionsView -> ModeSelectionView: Navigate to mode selection\nUser -> ModeSelectionView: Select mode\nModeSelectionView -> PersonalInformationView: Navigate to personal information\nUser -> PersonalInformationView: Enter personal details\nPersonalInformationView -> CompanyInformationView: Navigate to company information (if Business Mode)\nUser -> CompanyInformationView: Enter company details\nCompanyInformationView -> PackageSelectionView: Navigate to package selection\nUser -> PackageSelectionView: Choose package\nPackageSelectionView -> PaymentMethodView: Navigate to payment method\nUser -> PaymentMethodView: Select payment method\nPaymentMethodView -> CardDetailsView: Navigate to card details (if Credit/Debit Card selected)\nUser -> CardDetailsView: Enter card details\nCardDetailsView -> NotificationPermissionView: Navigate to notification permission\nUser -> NotificationPermissionView: Choose notification option\nNotificationPermissionView -> ProfileCompletionView: Navigate to profile completion\nUser -> ProfileCompletionView: View completion\nProfileCompletionView -> AmenitiesSelectionView: Navigate to amenities selection\nUser -> AmenitiesSelectionView: Select amenities\nAmenitiesSelectionView -> FrequentlyVisitedPlacesView: Navigate to frequently visited places\nUser -> FrequentlyVisitedPlacesView: Add new place\nFrequentlyVisitedPlacesView -> SavePlaceView: Navigate to save place\nUser -> SavePlaceView: Save place\nSavePlaceView -> VehicleSelectionView: Navigate to vehicle selection\nUser -> VehicleSelectionView: Select vehicle\nVehicleSelectionView -> ChauffeurSelectionView: Navigate to chauffeur selection\nUser -> ChauffeurSelectionView: Select chauffeur\nChauffeurSelectionView -> BookingConfirmationView: Navigate to booking confirmation\nUser -> BookingConfirmationView: Confirm booking\n@enduml",
  "state_management_flow": "State is managed using the Stacked architecture. ViewModels handle the business logic and state for their respective onboarding, profile setup, and personalized user experience views. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs the onboarding flow starting with WelcomeView. After onboarding, the profile setup flow begins with ModeSelectionView, followed by the personalized user experience flow starting with AmenitiesSelectionView. Navigation between views is handled by the Stacked Router defined in app.router.dart, allowing users to progress through the onboarding, profile setup, and personalized user experience pages with sliding transitions."
}