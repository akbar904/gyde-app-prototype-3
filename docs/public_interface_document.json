{
  "package_name": "com.com.walturn.gyde_app",
  "project_description": "A Flutter project using the Stacked architecture, featuring routing, dependency injection, and a multi-page onboarding flow for a luxury chauffeur service app called Gyde.",
  "architecture_overview": "The application follows the Stacked architecture with separate folders for app setup, features, UI components, and utilities. It uses Stacked for state management, routing, and dependency injection. The onboarding flow is implemented with sliding transitions between pages.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "onboarding": {
          "welcome_page.dart": {},
          "auth_options_page.dart": {},
          "phone_input_page.dart": {},
          "verification_code_page.dart": {},
          "email_collection_page.dart": {},
          "welcome_confirmation_page.dart": {},
          "terms_conditions_page.dart": {}
        }
      },
      "ui": {
        "common": {
          "app_colors.dart": {},
          "ui_helpers.dart": {}
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for the onboarding flow (WelcomePage, AuthOptionsPage, PhoneInputPage, VerificationCodePage, EmailCollectionPage, WelcomeConfirmationPage, TermsConditionsPage). The file structure allows for easy addition of new services, routes, bottom sheets, and dialogs using the @stacked-import, @stacked-route, @stacked-service, @stacked-bottom-sheet, and @stacked-dialog annotations.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/features/onboarding/welcome_page.dart",
        "package:my_app/features/onboarding/auth_options_page.dart",
        "package:my_app/features/onboarding/phone_input_page.dart",
        "package:my_app/features/onboarding/verification_code_page.dart",
        "package:my_app/features/onboarding/email_collection_page.dart",
        "package:my_app/features/onboarding/welcome_confirmation_page.dart",
        "package:my_app/features/onboarding/terms_conditions_page.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_page.dart",
      "description": "The welcome page of the onboarding flow, introducing the Gyde service.",
      "class_diagram": "@startuml\nclass WelcomePage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:flutter/material.dart",
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/auth_options_page.dart",
      "description": "Page offering authentication options to the user.",
      "class_diagram": "@startuml\nclass AuthOptionsPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:flutter/material.dart",
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/phone_input_page.dart",
      "description": "Page for entering the user's phone number for verification.",
      "class_diagram": "@startuml\nclass PhoneInputPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:flutter/material.dart",
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/verification_code_page.dart",
      "description": "Page for entering the verification code sent to the user's phone.",
      "class_diagram": "@startuml\nclass VerificationCodePage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:flutter/material.dart",
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/email_collection_page.dart",
      "description": "Page for collecting the user's email address.",
      "class_diagram": "@startuml\nclass EmailCollectionPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:flutter/material.dart",
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_confirmation_page.dart",
      "description": "Confirmation page welcoming the user to Gyde.",
      "class_diagram": "@startuml\nclass WelcomeConfirmationPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:flutter/material.dart",
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/terms_conditions_page.dart",
      "description": "Page displaying the terms and conditions of the Gyde service.",
      "class_diagram": "@startuml\nclass TermsConditionsPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:flutter/material.dart",
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/onboarding/welcome_page.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant WelcomePage\nparticipant AuthOptionsPage\nparticipant PhoneInputPage\nparticipant VerificationCodePage\nparticipant EmailCollectionPage\nparticipant WelcomeConfirmationPage\nparticipant TermsConditionsPage\n\nUser -> main: Launch app\nmain -> WelcomePage: Show\nUser -> WelcomePage: Interact\nWelcomePage -> AuthOptionsPage: Navigate\nUser -> AuthOptionsPage: Choose option\nAuthOptionsPage -> PhoneInputPage: Navigate (if phone)\nUser -> PhoneInputPage: Enter phone\nPhoneInputPage -> VerificationCodePage: Navigate\nUser -> VerificationCodePage: Enter code\nVerificationCodePage -> EmailCollectionPage: Navigate\nUser -> EmailCollectionPage: Enter email\nEmailCollectionPage -> WelcomeConfirmationPage: Navigate\nUser -> WelcomeConfirmationPage: View\nWelcomeConfirmationPage -> TermsConditionsPage: Navigate\nUser -> TermsConditionsPage: Agree\n@enduml",
  "state_management_flow": "State is managed using the Stacked architecture. ViewModels handle the business logic and state for their respective onboarding pages. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs the onboarding flow starting with the WelcomePage. Navigation between onboarding pages is handled by the Stacked Router defined in app.router.dart, with sliding transitions between pages."
}