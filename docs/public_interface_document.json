{
  "package_name": "com.com.walturn.gyde_app",
  "project_description": "A Flutter project using the Stacked architecture, featuring routing, dependency injection, and dialog/bottom sheet management. The app includes an onboarding flow for a luxury chauffeur service called Gyde, with ViewModels for each onboarding view to separate business logic from UI components.",
  "architecture_overview": "The application follows the Stacked architecture with separate folders for app setup, features, UI components, and utilities. It uses Stacked for state management, routing, and dependency injection. The onboarding flow consists of multiple pages with sliding transitions, each managed by its own ViewModel.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "app": {
          "app_view.dart": {},
          "app_viewmodel.dart": {}
        },
        "onboarding": {
          "welcome_page.dart": {},
          "welcome_page_viewmodel.dart": {},
          "auth_options_page.dart": {},
          "auth_options_page_viewmodel.dart": {},
          "phone_input_page.dart": {},
          "phone_input_page_viewmodel.dart": {},
          "verification_code_page.dart": {},
          "verification_code_page_viewmodel.dart": {},
          "email_collection_page.dart": {},
          "email_collection_page_viewmodel.dart": {},
          "welcome_confirmation_page.dart": {},
          "welcome_confirmation_page_viewmodel.dart": {},
          "terms_conditions_page.dart": {},
          "terms_conditions_page_viewmodel.dart": {}
        }
      },
      "ui": {
        "bottom_sheets": {
          "notice": {
            "notice_sheet.dart": {},
            "notice_sheet_model.dart": {}
          }
        },
        "common": {
          "app_colors.dart": {},
          "ui_helpers.dart": {}
        },
        "dialogs": {
          "info_alert": {
            "info_alert_dialog.dart": {},
            "info_alert_dialog_model.dart": {}
          }
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for the onboarding flow and services (BottomSheetService, DialogService, NavigationService).",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/ui/bottom_sheets/notice/notice_sheet.dart",
        "package:my_app/ui/dialogs/info_alert/info_alert_dialog.dart",
        "package:my_app/features/onboarding/welcome_page.dart",
        "package:my_app/features/onboarding/auth_options_page.dart",
        "package:my_app/features/onboarding/phone_input_page.dart",
        "package:my_app/features/onboarding/verification_code_page.dart",
        "package:my_app/features/onboarding/email_collection_page.dart",
        "package:my_app/features/onboarding/welcome_confirmation_page.dart",
        "package:my_app/features/onboarding/terms_conditions_page.dart"
      ]
    },
    {
      "name": "lib/features/app/app_view.dart",
      "description": "Defines the root widget of the application",
      "class_diagram": "@startuml\nclass AppView\nclass _App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_page.dart",
      "description": "The welcome page of the onboarding flow with 'Get Started' and introductory text. Uses WelcomePageViewModel for state management.",
      "class_diagram": "@startuml\nclass WelcomePage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:flutter/material.dart",
        "package:my_app/features/onboarding/welcome_page_viewmodel.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_page_viewmodel.dart",
      "description": "ViewModel for WelcomePage, handling business logic and state management.",
      "class_diagram": "@startuml\nclass WelcomePageViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/auth_options_page.dart",
      "description": "The authentication options page with 'Continue with Phone' and 'Continue with Email'. Uses AuthOptionsPageViewModel for state management.",
      "class_diagram": "@startuml\nclass AuthOptionsPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:flutter/material.dart",
        "package:my_app/features/onboarding/auth_options_page_viewmodel.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/auth_options_page_viewmodel.dart",
      "description": "ViewModel for AuthOptionsPage, handling business logic and state management.",
      "class_diagram": "@startuml\nclass AuthOptionsPageViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/phone_input_page.dart",
      "description": "The phone number input page with phone number entry and verification prompt. Uses PhoneInputPageViewModel for state management.",
      "class_diagram": "@startuml\nclass PhoneInputPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:flutter/material.dart",
        "package:my_app/features/onboarding/phone_input_page_viewmodel.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/phone_input_page_viewmodel.dart",
      "description": "ViewModel for PhoneInputPage, handling business logic and state management.",
      "class_diagram": "@startuml\nclass PhoneInputPageViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/verification_code_page.dart",
      "description": "The verification code page with code entry instructions. Uses VerificationCodePageViewModel for state management.",
      "class_diagram": "@startuml\nclass VerificationCodePage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:flutter/material.dart",
        "package:my_app/features/onboarding/verification_code_page_viewmodel.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/verification_code_page_viewmodel.dart",
      "description": "ViewModel for VerificationCodePage, handling business logic and state management.",
      "class_diagram": "@startuml\nclass VerificationCodePageViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/email_collection_page.dart",
      "description": "The email collection page for user email input. Uses EmailCollectionPageViewModel for state management.",
      "class_diagram": "@startuml\nclass EmailCollectionPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:flutter/material.dart",
        "package:my_app/features/onboarding/email_collection_page_viewmodel.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/email_collection_page_viewmodel.dart",
      "description": "ViewModel for EmailCollectionPage, handling business logic and state management.",
      "class_diagram": "@startuml\nclass EmailCollectionPageViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_confirmation_page.dart",
      "description": "The welcome confirmation page with access confirmation message. Uses WelcomeConfirmationPageViewModel for state management.",
      "class_diagram": "@startuml\nclass WelcomeConfirmationPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:flutter/material.dart",
        "package:my_app/features/onboarding/welcome_confirmation_page_viewmodel.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_confirmation_page_viewmodel.dart",
      "description": "ViewModel for WelcomeConfirmationPage, handling business logic and state management.",
      "class_diagram": "@startuml\nclass WelcomeConfirmationPageViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/terms_conditions_page.dart",
      "description": "The terms and conditions page with agreement text. Uses TermsConditionsPageViewModel for state management.",
      "class_diagram": "@startuml\nclass TermsConditionsPage\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:flutter/material.dart",
        "package:my_app/features/onboarding/terms_conditions_page_viewmodel.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/terms_conditions_page_viewmodel.dart",
      "description": "ViewModel for TermsConditionsPage, handling business logic and state management.",
      "class_diagram": "@startuml\nclass TermsConditionsPageViewModel\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it, starting with the onboarding flow.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/app/app_view.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant AppView\nparticipant WelcomePage\nparticipant AuthOptionsPage\nparticipant PhoneInputPage\nparticipant VerificationCodePage\nparticipant EmailCollectionPage\nparticipant WelcomeConfirmationPage\nparticipant TermsConditionsPage\n\nUser -> main: Launch app\nmain -> AppView: Create and run\nAppView -> WelcomePage: Show welcome\nWelcomePage -> AuthOptionsPage: Navigate on 'Get Started'\nAuthOptionsPage -> PhoneInputPage: Choose phone option\nPhoneInputPage -> VerificationCodePage: Enter phone number\nVerificationCodePage -> EmailCollectionPage: Enter verification code\nEmailCollectionPage -> WelcomeConfirmationPage: Enter email\nWelcomeConfirmationPage -> TermsConditionsPage: Confirm welcome\nUser -> TermsConditionsPage: Agree to terms\n@enduml",
  "state_management_flow": "State is managed using the Stacked architecture. ViewModels handle the business logic and state for their respective views. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs AppView. AppView initializes the Stacked architecture and shows the onboarding flow starting with the WelcomePage. Navigation between onboarding pages is handled by the Stacked Router defined in app.router.dart."
}