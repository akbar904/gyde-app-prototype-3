{
  "package_name": "com.com.walturn.gyde_app",
  "project_description": "A Flutter project using the Stacked architecture, featuring routing, dependency injection, and dialog/bottom sheet management. The app now includes an onboarding flow for a luxury chauffeur service called Gyde.",
  "architecture_overview": "The application follows the Stacked architecture with separate folders for app setup, features, UI components, and utilities. It uses Stacked for state management, routing, and dependency injection. The navigation flow has been updated to include an onboarding process with sliding transitions.",
  "folder_structure": {
    "lib": {
      "app": {
        "app.bottomsheets.dart": {},
        "app.dart": {},
        "app.dialogs.dart": {},
        "app.locator.dart": {},
        "app.router.dart": {}
      },
      "features": {
        "app": {
          "app_view.dart": {},
          "app_viewmodel.dart": {}
        },
        "onboarding": {
          "welcome_view.dart": {},
          "auth_options_view.dart": {},
          "phone_input_view.dart": {},
          "verification_code_view.dart": {},
          "email_collection_view.dart": {},
          "welcome_confirmation_view.dart": {},
          "terms_conditions_view.dart": {}
        },
        "startup": {
          "startup_view.dart": {},
          "startup_viewmodel.dart": {}
        }
      },
      "ui": {
        "bottom_sheets": {
          "notice": {
            "notice_sheet.dart": {},
            "notice_sheet_model.dart": {}
          }
        },
        "common": {
          "app_colors.dart": {},
          "ui_helpers.dart": {}
        },
        "dialogs": {
          "info_alert": {
            "info_alert_dialog.dart": {},
            "info_alert_dialog_model.dart": {}
          }
        }
      },
      "main.dart": {}
    }
  },
  "files": [
    {
      "name": "lib/app/app.dart",
      "description": "Defines the app structure using StackedApp annotation for routes, dependencies, bottom sheets, and dialogs. It includes routes for the onboarding flow (WelcomeView, AuthOptionsView, PhoneInputView, VerificationCodeView, EmailCollectionView, WelcomeConfirmationView, TermsConditionsView), services (BottomSheetService, DialogService, NavigationService), bottom sheets (NoticeSheet), and dialogs (InfoAlertDialog). The file structure allows for easy addition of new services, routes, bottom sheets, and dialogs using the @stacked-import, @stacked-route, @stacked-service, @stacked-bottom-sheet, and @stacked-dialog annotations.",
      "class_diagram": "@startuml\nclass App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked_annotations.dart",
        "package:stacked_services/stacked_services.dart",
        "package:my_app/ui/bottom_sheets/notice/notice_sheet.dart",
        "package:my_app/ui/dialogs/info_alert/info_alert_dialog.dart",
        "package:my_app/features/onboarding/welcome_view.dart",
        "package:my_app/features/onboarding/auth_options_view.dart",
        "package:my_app/features/onboarding/phone_input_view.dart",
        "package:my_app/features/onboarding/verification_code_view.dart",
        "package:my_app/features/onboarding/email_collection_view.dart",
        "package:my_app/features/onboarding/welcome_confirmation_view.dart",
        "package:my_app/features/onboarding/terms_conditions_view.dart"
      ]
    },
    {
      "name": "lib/features/app/app_view.dart",
      "description": "Defines the root widget of the application",
      "class_diagram": "@startuml\nclass AppView\nclass _App\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_view.dart",
      "description": "The welcome page of the onboarding flow, introducing the Gyde app.",
      "class_diagram": "@startuml\nclass WelcomeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/auth_options_view.dart",
      "description": "The authentication options page, allowing users to choose between phone and email.",
      "class_diagram": "@startuml\nclass AuthOptionsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/phone_input_view.dart",
      "description": "Page for users to input their phone number for verification.",
      "class_diagram": "@startuml\nclass PhoneInputView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/verification_code_view.dart",
      "description": "Page for users to enter the verification code sent to their phone.",
      "class_diagram": "@startuml\nclass VerificationCodeView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/email_collection_view.dart",
      "description": "Page for collecting user's email for tailored services.",
      "class_diagram": "@startuml\nclass EmailCollectionView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/welcome_confirmation_view.dart",
      "description": "Page confirming the user's registration and welcoming them to Gyde.",
      "class_diagram": "@startuml\nclass WelcomeConfirmationView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/onboarding/terms_conditions_view.dart",
      "description": "Page displaying the terms and conditions of using Gyde.",
      "class_diagram": "@startuml\nclass TermsConditionsView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart"
      ]
    },
    {
      "name": "lib/features/startup/startup_view.dart",
      "description": "The startup view shown when the app is first launched.",
      "class_diagram": "@startuml\nclass StartupView\n@enduml",
      "methods": [],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:gap/gap.dart"
      ]
    },
    {
      "name": "lib/features/startup/startup_viewmodel.dart",
      "description": "ViewModel for the StartupView, handles initialization logic.",
      "class_diagram": "@startuml\nclass StartupViewModel\n@enduml",
      "methods": [
        {
          "name": "runStartupLogic",
          "description": "Runs the startup logic and navigates to the onboarding flow",
          "parameters": [],
          "return_type": "Future"
        }
      ],
      "dependencies": [
        "package:stacked/stacked.dart",
        "package:stacked_services/stacked_services.dart"
      ]
    },
    {
      "name": "lib/main.dart",
      "description": "The entry point of the application. Sets up the app and runs it.",
      "class_diagram": "@startuml\nclass main\n@enduml",
      "methods": [
        {
          "name": "main",
          "description": "The main function that runs the app",
          "parameters": [],
          "return_type": "void"
        }
      ],
      "dependencies": [
        "package:flutter/material.dart",
        "package:flutter/services.dart",
        "package:my_app/app/app.bottomsheets.dart",
        "package:my_app/app/app.dialogs.dart",
        "package:my_app/app/app.locator.dart",
        "package:my_app/features/app/app_view.dart"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "flutter",
      "version": "sdk: flutter",
      "purpose": "Flutter framework"
    },
    {
      "name": "stacked",
      "version": "^3.4.0",
      "purpose": "Stacked architecture for state management and routing"
    },
    {
      "name": "stacked_services",
      "version": "^1.1.0",
      "purpose": "Services for Stacked architecture"
    },
    {
      "name": "gap",
      "version": "^2.0.0",
      "purpose": "Creating gaps in layouts"
    }
  ],
  "sequence_diagram": "@startuml\nactor User\nparticipant main\nparticipant AppView\nparticipant StartupView\nparticipant StartupViewModel\nparticipant WelcomeView\nparticipant AuthOptionsView\nparticipant PhoneInputView\nparticipant VerificationCodeView\nparticipant EmailCollectionView\nparticipant WelcomeConfirmationView\nparticipant TermsConditionsView\n\nUser -> main: Launch app\nmain -> AppView: Create and run\nAppView -> StartupView: Initialize\nStartupView -> StartupViewModel: Run startup logic\nStartupViewModel -> WelcomeView: Navigate on completion\nWelcomeView -> AuthOptionsView: User clicks 'Next'\nAuthOptionsView -> PhoneInputView: User selects 'Continue with Phone'\nPhoneInputView -> VerificationCodeView: User enters phone number\nVerificationCodeView -> EmailCollectionView: User enters verification code\nEmailCollectionView -> WelcomeConfirmationView: User enters email\nWelcomeConfirmationView -> TermsConditionsView: User clicks 'Next'\n@enduml",
  "state_management_flow": "State is managed using the Stacked architecture. ViewModels handle the business logic and state for their respective views. The app.locator.dart file sets up dependency injection, while app.router.dart manages navigation between views. The onboarding process is managed through a series of views that transition with sliding animations.",
  "navigation_flow": "The application starts with main.dart, which sets up the app and runs AppView. AppView initializes the Stacked architecture and shows the StartupView. After completing initialization logic, it navigates through the onboarding flow, starting with the WelcomeView and proceeding through a series of views with sliding transitions. Navigation between views is handled by the Stacked Router defined in app.router.dart."
}